// 자바스크립트도 다른 언어와 마찬가지로 스코프, 즉 유효 범위가 있다.
// C같은 경우엔 함수의 {, } if, for문의 {,}도 한 블럭으로 묶여, 그 안에서 선언된 변수가 밖에서는 접근이 불가능하다.
// 자바스크립트에서 함수 내의 {,}블록(for() {}, if {} 같은 구문)은 유효 범위가 없다.
// 오직 함수만이 유효 범위의 한 단위가 된다.
// 이 유효 범위를 나타내는 스코프가 [[scope]] 프로퍼티로 각 함수 객체 내에서 연결 리스트 형식으로 관리되는데, 이를 스코프 체인이라 한다.

// 각각의 함수는 [[scope]] 프로퍼티로 자신이 생성된 실행 컨텍스트의 스코프 체인을 참조한다.
// 함수가 실행되는 순간 실행 컨텍스트가 만들어지고, 이 실행 컨텍스트는 실행된 함수의 [[scope]] 프로퍼티를 기반으로 새로운 스코프 체인을 만든다.

// #### 전역 실행 컨텍스트의 스코프 체인
var var1 = 1;
var var2 = 2;

console.log(var1);
console.log(var2);
// 위 코트는 전역 코드이다. 함수가 선언되지 않아 함수 호출이 없고 실행 가능한 코드들만 나열되어 있다.
// 이 코드를 실행하면 전역 실행 컨텍스트가 생성되고, 변수 객체가 만들어진다.
// 이 변수의 스코프 체인은 전역 실행 컨텍스트 단 하나만 실행 되고 있는 최상위에 위치하는 최상위 변수 객체 이므로 참조할 상위 컨텍스트가 없다.
// 이 변수 객체의 스코프 체인은 자기 자신만을 가진다.
// 즉 변수 객체에 자기 자신을 가리키는 [[scope]]와 var1, var2, this가 있다.

// #### 함수를 호출한 경우 생성되는 실행 컨텍스트의 스코프 체인
var var1 = 1;
var var2 = 2;
function func() {
  var var1 = 10;
  var var2 = 20;
  console.log(var1, var2);
}
// 코드를 실행하면 전역 실행 컨텍스트가 생성되고 func() 함수 객체가 만들어진다.
// 함수 객체가 생서될때 함수 객체의 [[scope]]는 현재 실행되는 컨텍스트의 변수 객체에 있는 [[scope]]를 그대로 가진다.
// 즉, func() 함수 객체의 [[scope]]는 전연 변수 객체가 된다.

func();
// 함수를 실행하면 새로운 컨텍스트가 만들어진다.
// func 컨텍스트의 스코프 체인은 실행된 함수의 [[scope]] 프로퍼티를 그대로 복사한 후, 현재 생성된 변수 객체를 복사한 스코프 체인의 맨 앞에 추가한다.
// func() 함수 객체의 [[scope]] 프로퍼티가 전역 객체 하나만을 가지고 있었으므로, 
// func 실행 컨텍스트의 스코프 체인은 [func 변수 객체 - 전역객체]가 된다.

console.log(var1, var2);
// 정리
// 각 함수 객체는 [[scope]] 프로퍼티로 현재 컨텍스트의 스포크 체인을 참조한다.
// 함수가 실행되면 새 실행 컨텍스트가 만들어지고 현재 실행되는 함수 객체의 [[scope]] 프로퍼티를 복사하고,
// 새롭게 생셩된 변수 객체를 해당 체인의 제일 앞에 추가한다.
// 스코프 체인 = 현재 실행 컨텍스트의 변수 객체 + 상위 컨텍스트의 스코프 체인

// ####
var var3 = 3;

function printFunc1() {
  var var3 = 33;

  function printValue1() {
    return var3;
  }

  console.log(printValue1()); // 33
}

printFunc1();

// ####
var var4 = 4;
function printValue2() {
  return var4;
}
function printFunc2(func) {
  var var4 = 44;
  console.log(func()); // 4
}
printFunc2(printValue2)
// 함수 객체가 처음 생성될 당시 실행 컨텍스트가 무엇인지를 생각해야한다.
// 각 함수 객체가 처음 생성될 때 [[scope]]는 전역 객체의 [[scope]]를 참조한다.
// 각 함수가 실행될 때 생성되는 실행 컨텍스트의 스코프 체인은 전역 객체와 그 앞에 새롭게 만들어진 변수 객체가 추가된다.



